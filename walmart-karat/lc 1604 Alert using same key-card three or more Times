// keyTime.length: n
// time: O(nlogn)
// space: O(1)

class Solution {
    public List<String> alertNames(String[] keyName, String[] keyTime) {
        Map<String, List<Integer>> log = new HashMap<>();
        List<String> res = new ArrayList<>();
        for (int i = 0; i < keyName.length; i++) {
            String name = keyName[i];
            int time = Integer.parseInt(keyTime[i].substring(0, 2) +
                keyTime[i].substring(3));
            log.computeIfAbsent(name, s -> new ArrayList<>()).add(time);
        }

        for (Map.Entry<String, List<Integer>> entry : log.entrySet()) {
            List<Integer> times = entry.getValue();
            Collections.sort(times);
            for (int i = 2; i < times.size(); i++) {
                if (times.get(i) - times.get(i - 2) <= 100) {
                    res.add(entry.getKey());
                    break;
                }
            }
        }

        Collections.sort(res);
        return res;
    }
}